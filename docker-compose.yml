#version: '3.8'
#services:
#  app:
#    container_name: app-container
#    image: client:0.0.1
#    build:
#      context: .
#      dockerfile: Dockerfile
#    #    ports:
#    #      - "8080:8080" # Закоментированно для доступа только через nginx
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - postgres
#      - nginx
#    environment:
#      DB_HOST: postgres-container # localhost:5432 or docker container name
#      DB_NAME: jira_db
#      DB_USERNAME: jira
#      DB_PASSWORD: password
#      OAUTH_GITHUB_CLIENT_ID: 3d0d8738e65881fff266
#      OAUTH_GITHUB_CLIENT_SECRET: 0f97031ce6178b7dfb67a6af587f37e222a16120
#      OAUTH_GOOGLE_CLIENT_ID: 329113642700-f8if6pu68j2repq3ef6umd5jgiliup60.apps.googleusercontent.com
#      OAUTH_GOOGLE_CLIENT_SECRET: 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
#      OAUTH_GITLAB_CLIENT_ID: b8520a3266089063c0d8261cce36971defa513f5ffd9f9b7a3d16728fc83a494
#      OAUTH_GITLAB_CLIENT_SECRET: e72c65320cf9d6495984a37b0f9cc03ec46be0bb6f071feaebbfe75168117004
#      SMTP_HOST: smtp.yandex.ru
#      SMTP_PORT: 587
#      SMTP_USERNAME: ryver.mailer@yandex.ru
#      SMTP_PASSWORD: sinoblcmolmguvhb
#
#  db:
#    container_name: postgres-container
#    image: postgres:latest
#    environment:
#      POSTGRES_USER: jira
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: jira_db
#    ports:
#      - "5432:5432"
#    expose:
#      - "5432"
#    volumes:
#      #      - ./infrastructure/db/dump.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - db-data:/var/lib/postgresql/data
#    restart: unless-stopped
#    networks:
#      - postgres
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -d jira -U $${POSTGRES_USER}" ]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#
#  pgadmin:
#    container_name: pgadmin-container
#    image: dpage/pgadmin4:latest
#    restart: unless-stopped
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#      PGADMIN_LISTEN_PORT: 80
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    depends_on:
#      - db
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 1G
#    networks:
#      - postgres
#
#  nginx:
#    container_name: nginx-container
#    image: nginx:latest
#    #    restart: unless-stopped
#    volumes:
#      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./resources/static:/usr/share/nginx/static
#      - ./resources/robots.txt:/usr/share/nginx/robots.txt:ro
#    ports:
#      - "80:80"
#    networks:
#      - nginx
#    depends_on:
#      - app
#
#volumes:
#  db-data:
#  pgadmin-data:
#
#
#networks:
#  postgres:
#  nginx:
#    driver: bridge